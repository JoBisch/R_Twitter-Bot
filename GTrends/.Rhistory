print("Hi")
## Packages ____________________________
packages <- c("gtrendsR", "twitteR", "rstudioapi", "ggplot2", "lubridate")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# usage ________________________________
ipak(packages)
today <- Sys.Date()
date.5y <- today %m+% years(-5)
date.3y <- today %m+% years(-3)
date.1y <- today %m+% years(-1)
#define the keywords
keywords=c("Bitcoin")
#set the geographic area: DE = Germany
country=c("")
#set the time window
time=(paste(date.5y, today, sep = " "))
#set channels
channel=c("web", "news", "images", "froogle", "youtube")
data <- gtrends(keyword = keywords, geo = country, time = time,
gprop = channel,
category = 0, hl = "en-US", low_search_volume = FALSE,
cookie_url = "http://trends.google.com/Cookies/NID", tz = 0,
onlyInterest = FALSE)
#select only interst over time
time.trend.5y <- data$interest_over_time
################################
#define the keywords
keywords=c("Bitcoin")
#set the geographic area: DE = Germany
country=c("")
#set the time window
time=(paste(date.3y, today, sep = " "))
#set channels
channel=c("web", "news", "images", "froogle", "youtube")
data <- gtrends(keyword = keywords, geo = country, time = time,
gprop = channel,
category = 0, hl = "en-US", low_search_volume = FALSE,
cookie_url = "http://trends.google.com/Cookies/NID", tz = 0,
onlyInterest = FALSE)
#select only interst over time
time.trend.3y <- data$interest_over_time
################################
#define the keywords
keywords=c("Bitcoin")
#set the geographic area: DE = Germany
country=c("")
#set the time window
time=(paste(date.1y, today, sep = " "))
#set channels
channel=c("web", "news", "images", "froogle", "youtube")
data <- gtrends(keyword = keywords, geo = country, time = time,
gprop = channel,
category = 0, hl = "en-US", low_search_volume = FALSE,
cookie_url = "http://trends.google.com/Cookies/NID", tz = 0,
onlyInterest = FALSE)
#select only interst over time
time.trend.1y <- data$interest_over_time
# Bitcoin Google Trends Plot 5 years
plot.5y <- ggplot(data=time.trend.5y, aes(x=date, y=hits))+
geom_line(color = "black") +
ylab('Relative Interest') +
theme_bw() +
theme(legend.position = "none", axis.title.x=element_blank())
plot.5y
ggsave("gtrends_btc_5y.png", plot = last_plot())
# Bitcoin Google Trends Plot 3 years
plot.3y <- ggplot(data=time.trend.3y, aes(x=date, y=hits))+
geom_line(color = "black") +
ylab('Relative Interest') +
theme_bw() +
theme(legend.position = "none", axis.title.x=element_blank())
plot.3y
ggsave("gtrends_btc_3y.png", plot = last_plot())
# Bitcoin Google Trends Plot 1 years
plot.1y <- ggplot(data=time.trend.1y, aes(x=date, y=hits))+
geom_line(color = "black") +
ylab('Relative Interest') +
theme_bw() +
theme(legend.position = "none", axis.title.x=element_blank())
plot.1y
ggsave("gtrends_btc_1y.png", plot = last_plot())
#REPLACE '####' with the appropriate values from your twitter app
consumerKey <- '6aPpj3vN3u4rYLGpncJM856ke'
consumerSecret <- '7KLgQUjE6qRsIEpNEn1ZvShzFmnKft5DEweeNjSLO2WUbEdrvf'
accessToken <- '1152874263839424512-8KDAsXUspwbjhzZenckgTV70XhFhgz'
accessTokenSecret <- 'OcXcuqwg91m8UsE2nSpXkSotQ2yZhV2tRNgtySvMF2tTC'
#Connect to twitter
setup_twitter_oauth(consumerKey,consumerSecret,accessToken,accessTokenSecret)
# Bitcoin Google Trends Plot 5 years
plot.5y <- ggplot(data=time.trend.5y, aes(x=date, y=hits))+
geom_line(color = "black") +
ylab('Relative Interest') +
theme_bw() +
labs(caption="Datenquelle: Google Trends (https://www.google.com/trends)") +
theme(legend.position = "none", axis.title.x=element_blank())
plot.5y
rm(list = ls())
## Packages ____________________________
packages <- c("twitteR")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# usage ________________________________
ipak(packages)
#REPLACE '####' with the appropriate values from your twitter app
consumerKey <- '6aPpj3vN3u4rYLGpncJM856ke'
consumerSecret <- '7KLgQUjE6qRsIEpNEn1ZvShzFmnKft5DEweeNjSLO2WUbEdrvf'
accessToken <- '1152874263839424512-8KDAsXUspwbjhzZenckgTV70XhFhgz'
accessTokenSecret <- 'OcXcuqwg91m8UsE2nSpXkSotQ2yZhV2tRNgtySvMF2tTC'
#Connect to twitter
setup_twitter_oauth(consumerKey,consumerSecret,accessToken,accessTokenSecret)
#Post Tweet !
tweet(text = "HELLO WORLD! :)")
rm(list = ls())
## Packages ____________________________
packages <- c("twitteR")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# usage ________________________________
ipak(packages)
#REPLACE '####' with the appropriate values from your twitter app
consumerKey <- '6aPpj3vN3u4rYLGpncJM856ke'
consumerSecret <- '7KLgQUjE6qRsIEpNEn1ZvShzFmnKft5DEweeNjSLO2WUbEdrvf'
accessToken <- '1152874263839424512-8KDAsXUspwbjhzZenckgTV70XhFhgz'
accessTokenSecret <- 'OcXcuqwg91m8UsE2nSpXkSotQ2yZhV2tRNgtySvMF2tTC'
#Connect to twitter
setup_twitter_oauth(consumerKey,consumerSecret,accessToken,accessTokenSecret)
#Post Tweet !
tweet(text = "HELLO WORLD! :)")
rm(list = ls())
## Packages ____________________________
packages <- c("gtrendsR")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# usage ________________________________
ipak(packages)
today <- Sys.Date()
date.5y <- today %m+% years(-5)
date.3y <- today %m+% years(-3)
date.1y <- today %m+% years(-1)
#define the keywords
keywords=c("Bitcoin")
#set the geographic area: DE = Germany
country=c("")
#set the time window
time=(paste(date.5y, today, sep = " "))
#set channels
channel=c("web", "news", "images", "froogle", "youtube")
data <- gtrends(keyword = keywords, geo = country, time = time,
gprop = channel,
category = 0, hl = "en-US", low_search_volume = FALSE,
cookie_url = "http://trends.google.com/Cookies/NID", tz = 0,
onlyInterest = FALSE)
#select only interst over time
time.trend.5y <- data$interest_over_time
print(head(time.trend.5y))
# packages _____________________________
packages <- c("rtweet", "tidyverse", "tidytext")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# usage ________________________________
ipak(packages)
install.packages('tidyverse')
# packages _____________________________
packages <- c("rtweet", "tidyverse", "tidytext")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# usage ________________________________
ipak(packages)
library(tidyverse)
library(tensorflow)
tf$constant("Hellow Tensorflow")
install_tensorflow()
library(tensorflow)
tf$constant("Hellow Tensorflow")
shiny::runApp('C:/Users/Joshua/Google Drive/01_Yoshi/99_Studying/Crypto n Blockchain/Shiny/test')
library(plumber)
install.packages('plumber')
library(plumber)
library(plumber)
# 'plumber.R' is the location of the file shown above
pr("plumber.R") %>%
pr_run(port=8000)
#* Echo back the input
#* @param msg The message to echo
#* @get /echo
function(msg="") {
list(msg = paste0("The message is: '", msg, "'"))
}
#* Plot a histogram
#* @serializer png
#* @get /plot
function() {
rand <- rnorm(100)
hist(rand)
}
#* Return the sum of two numbers
#* @param a The first number to add
#* @param b The second number to add
#* @post /sum
function(a, b) {
as.numeric(a) + as.numeric(b)
}
source('~/.active-rstudio-document')
plumb(file='C:/Users/Joshua/Desktop/test_plumber.R')$run()
plumb(file='C:/Users/Joshua/Desktop/test_plumber.R')$run()
wd()
getwd()
plumb(file='test_plumber.R')$run()
plumb(file='test_plumber.R')$run()
http://127.0.0.1:9314/echo?msg=Jürgen
test <- http://127.0.0.1:9314/echo?msg=Jürgen
test
test
print(test)
test <- 'http://127.0.0.1:9314/echo?msg=Jürgen'
print(test)
test <- 'http://127.0.0.1:9314/echo?msg=Jürgen'
print(test)
test <- 'http://127.0.0.1:9314/echo?msg=Jürgen'
print(test)
library(httr)
install.packages('httr')
install.packages("httr")
library(httr)
test <- GET('http://127.0.0.1:9314/echo?msg=Jürgen')
print(test)
test
http_status(test
http_status(test)
test <- GET("http://127.0.0.1:9314/echo?msg=Jürgen")
http_status(test)
plumber::plumb(file='test_plumber.R')$run()
# packages _____________________________
packages <- c("rtweet", "dplyr", "tidyr", "Quandl", "ggplot2", "zoo", "lubridate")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# usage ________________________________
ipak(packages)
# sets working directory to RScript location
if (Sys.getenv("RSTUDIO") == "1") {
wd <- dirname(rstudioapi::getSourceEditorContext()$path)
} else {
wd <- '/home/R_Twitter-Bot/Twitter_Sentiment-Analysis'
}
setwd(wd)
# variable today _______________________
today <- Sys.Date()
today.3y <- today %m+% years(-3)
today.5y <- today %m+% years(-5)
# get API-Key from config ______________
quandl <- config::get("quandl")
apikey <- quandl$apikey
# get data from quandl _________________
data <- Quandl("BCHAIN/DIFF"
, api_key=apikey
,start_date=today.3y
, end_date=today)
data$Value <- data$Value/1000000000000
# Make zoo object of data ______________
temp.zoo<-zoo(data$Value)
# Calculate moving average with window and make first and last value as NA (to ensure identical length of vectors)
ma<-rollmean(temp.zoo, 100, fill = list(NA, NULL, NA))
# Add calculated moving averages to existing data frame
data$ma=coredata(ma)
# plot _________________________________
plot <- ggplot(data=data, aes(x=Date, y=Value)) +
geom_line(color = "black", size=1) +
geom_line(aes(Date,ma),color="orange", size=2) +
ylab('Mining Difficulty (Trillions)') +
scale_y_continuous(expand = c(0, 0)) +
theme_bw() +
labs(caption="Source: Quandl (https://www.quandl.com/data/BCHAIN/DIFF-Bitcoin-Difficulty)") +
theme(legend.position = "none", axis.title.x=element_blank())
plot
rm(list = ls())
# packages _____________________________
packages <- c("gtrendsR"
,"lubridate"
,"config"
,"rstudioapi"
,"tidyverse"
,"viridis"
,"spData"
,"tmap")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# usage ________________________________
ipak(packages)
# sets working directory to RScript location
if (Sys.getenv("RSTUDIO") == "1") {
wd <- dirname(rstudioapi::getSourceEditorContext()$path)
} else {
wd <- '/home/R_Twitter-Bot/GTrends'
}
setwd(wd)
today <- Sys.Date()
today.5y <- today %m+% years(-5)
# gtrends variables ____________________
# define the keywords __________________
keywords=c("Bitcoin")
# set the geographic area: DE = Germany
country=c("")
# set the time window __________________
time=(paste(today.5y, today, sep = " "))
# set channels _________________________
channel=c("web", "news", "images", "froogle", "youtube")
# get google trends data _______________
gtrends.data <- gtrends(keyword = keywords, geo = country, time = time,
gprop = channel,
category = 0, hl = "en-US", low_search_volume = FALSE,
cookie_url = "http://trends.google.com/Cookies/NID", tz = 0,
onlyInterest = FALSE)
# select only interst over time ________
gtrends.data.country <- gtrends.data$interest_by_country
#
countries <- spData::world %>%
left_join(y=gtrends.data.country,by = c("name_long" = "location"),keep=T)
# package tmap
map <- tm_shape(countries) +
tm_fill("hits",
title = "Search Interest",
legend.reverse = T,
id = "name_long",
popup.vars=c(Name = "name_long",Search.Interest = "hits",Population = "pop",Life.Expectancy = "lifeExp", GDP.per.capita = "gdpPercap")) +
tm_polygons() +
tm_credits(text = "Source: Google Trends (https://www.google.com/trends)")
# save plot ____________________________
tmap_save(map, "gtrends_bitcoin_world_map.png")
twitter <- config::get("twitter")
map
map
# save plot ____________________________
tmap_save(map, "gtrends_bitcoin_world_map.png")
twitter <- config::get("twitter")
# twitter login credentuials ___________
consumerKey <- twitter$consumerKey
consumerSecret <- twitter$consumerSecret
accessToken <- twitter$accessToken
accessTokenSecret <- twitter$accessTokenSecret
# connect to twitter ___________________
setup_twitter_oauth(consumerKey,consumerSecret,accessToken,accessTokenSecret)
